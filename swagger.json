{
  "openapi": "3.0.1",
  "info": {
    "version": "1",
    "title": "Your pet API",
    "description": "This API of the Your Pet application. It is built on Node.js, utilizing the Express.js framework to implement the API and Mongoose for interacting with the MongoDB database.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://your-pet-shw3.onrender.com" },
    { "url": "http://localhost:5000" }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User's endpoints"
    },
    {
      "name": "Notice",
      "description": "Notice's endpoints"
    },
    {
      "name": "Pet",
      "description": "Pet's endpoints"
    },
    {
      "name": "News",
      "description": "News endpoints"
    },
    {
      "name": "Sponsor",
      "description": "Sponsor's endpoints"
    }
  ],
  "paths": {
    "/users/auth/register": {
      "post": {
        "tags": ["User"],
        "summary": "User registration",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBadRequestResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Provided email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflictEmailResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/auth/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBadRequestResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user information",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update user's object (multipart/form-data)",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation, user update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["User"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation, No content"
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },

    "/notices": {
      "get": {
        "tags": ["Notice"],
        "summary": "Get notices by category and/or search parameters",
        "parameters": [
          {
            "in": "query",
            "name": "NoticesCategoriesNav",
            "description": "Notices category",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "sell",
              "enum": ["sell", "lost-found", "in-good-hands"]
            }
          },
          {
            "in": "query",
            "name": "NoticesSearch",
            "description": "Notices search parameter (search by title)",
            "schema": {
              "type": "string",
              "default": "empty string",
              "example": "cat"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "Current page notices (page=allNotices/limit)",
            "explode": true,
            "schema": {
              "type": "number",
              "default": 1,
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of notices that should be on one page",
            "schema": {
              "type": "number",
              "default": 12,
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoticesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Notice"],
        "summary": "Add notices by chose category",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Notice's object (multipart/form-data)",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddNoticeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNoticeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notices/favorite": {
      "get": {
        "tags": ["Notice"],
        "summary": "Get favorite notices autorizated user",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Current page notices (page=allNotices/limit)",
            "explode": true,
            "schema": {
              "type": "number",
              "default": 1,
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of notices that should be on one page",
            "schema": {
              "type": "number",
              "default": 12,
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFavoriteNoticesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notices/{noticeId}": {
      "get": {
        "tags": ["Notice"],
        "summary": "Get notice by id",
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "description": "Notice's id",
            "schema": {
              "type": "string",
              "example": "64e251e974992f975f71c4ee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoticeByIdResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Notice"],
        "summary": "Delete owner notice by id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "description": "Notice's id",
            "schema": {
              "type": "string",
              "example": "64e251e974992f975f71c4ee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveOwnerNoticeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notices/{noticeId}/addFavorite": {
      "patch": {
        "tags": ["Notice"],
        "summary": "Add notice to favorite by id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "description": "Notice's id",
            "schema": {
              "type": "string",
              "example": "64e251e974992f975f71c4ee"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNoticeToFavoriteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notices/{noticeId}/removeFavorite": {
      "patch": {
        "tags": ["Notice"],
        "summary": "Remove notice from favorite by id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "description": "Notice's id",
            "schema": {
              "type": "string",
              "example": "64e251e974992f975f71c4ee"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveNoticeFromFavoriteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notices/userNotices": {
      "get": {
        "tags": ["Notice"],
        "summary": "Get owner user's notices",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Current page notices (page=allNotices/limit)",
            "explode": true,
            "schema": {
              "type": "number",
              "default": 1,
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of notices that should be on one page",
            "schema": {
              "type": "number",
              "default": 12,
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserNoticesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },

    "/pets": {
      "get": {
        "tags": ["Pet"],
        "summary": "Get pet with data owner",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPetWithOwnerResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Pet"],
        "summary": "Add pet",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Pet's object (multipart/form-data)",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddPetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pets/{petId}": {
      "delete": {
        "tags": ["Pet"],
        "summary": "Delete owner pet by id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "petId",
            "required": true,
            "description": "Pet's id",
            "schema": {
              "type": "string",
              "example": "64e251e974992f975f71c4ee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveOwnerPetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },

    "/news": {
      "get": {
        "tags": ["News"],
        "summary": "Get news by search parameters",
        "parameters": [
          {
            "in": "query",
            "name": "NewsSearch",
            "description": "News search parameter (search by title or text)",
            "schema": {
              "type": "string",
              "default": "empty string",
              "example": "cat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNewsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sponsors": {
      "get": {
        "tags": ["Sponsor"],
        "summary": "Get sponsors",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSponsorsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorServerResponse"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "describing": "User's id",
                "example": "534d677fcc8ea7aedaabc1"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Taras"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "Taras@gmail.com"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar link",
                "example": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693037240/avatars/default_avatar.png"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "32143232436545474"
          }
        },
        "example": {
          "user": {
            "_id": "3444542njnj54khbhb45bhk",
            "name": "Taras",
            "email": "Taras@gmail.com",
            "avatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693037240/avatars/default_avatar.png"
          },
          "token": "32143232436545474"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "describing": "User's id",
                "example": "534d677fcc8ea7aedaabc1"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Taras"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "Taras@gmail.com"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar link",
                "example": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693037240/avatars/default_avatar.png"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "32143232436545474"
          }
        },
        "example": {
          "user": {
            "_id": "3444542njnj54khbhb45bhk",
            "name": "Taras",
            "email": "Taras@gmail.com",
            "avatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693037240/avatars/default_avatar.png"
          },
          "token": "32143232436545474"
        }
      },
      "GetCurrentUserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "describing": "User's id",
            "example": "534d677fcc8ea7aedaabc1"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Taras"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "Taras@gmail.com"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar link",
            "example": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693037240/avatars/default_avatar.png"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "23-11-2023"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+38099943"
          },
          "location": {
            "type": "string",
            "description": "User's location",
            "example": "Lviv"
          }
        },
        "example": {
          "_id": "3444542njnj54khbhb45bhk",
          "name": "Taras",
          "email": "Taras@gmail.com",
          "avatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693037240/avatars/default_avatar.png",
          "birthday": "23-11-2023",
          "phone": "+38099943",
          "location": "Lviv"
        }
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Taras"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatar": {
            "type": "file",
            "format": "binary",
            "description": "User's avatar file",
            "example": "avatar.jpg"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "23-12-2023"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+38097485495"
          },
          "location": {
            "type": "string",
            "description": "User's location",
            "example": "Lviv"
          }
        }
      },
      "UserUpdateResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "describing": "User's id",
            "example": "534d677fcc8ea7aedaabc1"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Taras"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar link",
            "example": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693037240/avatars/default_avatar.png"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "23-12-2023"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+38097485495"
          },
          "location": {
            "type": "string",
            "description": "User's location",
            "example": "Lviv"
          }
        },
        "example": {
          "_id": "3444542njnj54khbhb45bhk",
          "name": "Taras",
          "email": "user@example.com",
          "avatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693037240/avatars/default_avatar.png",
          "birthday": "23-12-2023",
          "phone": "+38097485495",
          "location": "Lviv"
        }
      },

      "GetNoticesResponse": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Notice's title",
                  "example": "Cute cat looking for a home"
                },
                "petAvatarURL": {
                  "type": "string",
                  "description": "Pet's foto link",
                  "example": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg"
                },
                "name": {
                  "type": "string",
                  "description": "Pet's name",
                  "example": "Melany"
                },
                "birthday": {
                  "type": "string",
                  "description": "Pet's birthday",
                  "example": "21-09-2023"
                },
                "type": {
                  "type": "string",
                  "description": "Pet's type",
                  "example": "Promeranian"
                },
                "sex": {
                  "type": "string",
                  "description": "Pet's sex",
                  "enum": ["male", "female"],
                  "example": "male"
                },
                "comments": {
                  "type": "string",
                  "description": "Notice's comments",
                  "example": "Rich would be the perfect addition to an active family that loves to play."
                },
                "location": {
                  "type": "string",
                  "description": "Pet's location",
                  "example": "Barnstable Town"
                },
                "category": {
                  "type": "string",
                  "description": "Notice's category",
                  "enum": ["sell", "lost/found", "in good hands"],
                  "example": "lost/found"
                },
                "price": {
                  "type": "number",
                  "description": "Pet's price",
                  "example": "23"
                },
                "owner": {
                  "type": "string",
                  "description": "Owner's id",
                  "example": "534d677fcc8ea74aedaabdc1"
                },
                "idUsersAddedFavorite": {
                  "type": "array",
                  "description": "User's id who added notice favorite",
                  "item": {
                    "type": "string",
                    "describe": "User's id",
                    "example": "64df88ca1f2426eddf5014d7"
                  }
                }
              }
            }
          },
          "totalPages": {
            "type": "number",
            "description": "The number of total pages",
            "example": 1
          }
        },
        "example": {
          "notices": [
            {
              "title": "Cute pet looking for a home",
              "petAvatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg",
              "name": "Charlie",
              "birthday": "21-09-2023",
              "type": "Promeranian",
              "sex": "male",
              "place": "Little Rock",
              "comments": "Rich would be the perfect addition to an active family that loves to play.",
              "category": "sell",
              "price": "40",
              "owner": "f24cf26ff2b7a80e999b8abb",
              "idUsersAddedFavorite": [
                "64df88ca1f2426eddf5014d7",
                "75df88ca1f6346eddf5014g6"
              ]
            },
            {
              "title": "Cute pet looking for a home",
              "petAvatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg",
              "name": "Charlie",
              "birthday": "21-09-2023",
              "type": "Promeranian",
              "sex": "male",
              "place": "Little Rock",
              "comments": "Rich would be the perfect addition to an active family that loves to play.",
              "category": "sell",
              "price": "40",
              "owner": "f24cf26ff2b7a80e999b8abb",
              "idUsersAddedFavorite": [
                "64df88ca1f2426eddf5014d7",
                "75df88ca1f6346eddf5014g6"
              ]
            }
          ],
          "totalPages": 3
        }
      },
      "GetFavoriteNoticesResponse": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Notice's title",
                  "example": "Cute cat looking for a home"
                },
                "petAvatarURL": {
                  "type": "string",
                  "description": "Pet's foto link",
                  "example": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg"
                },
                "name": {
                  "type": "string",
                  "description": "Pet's name",
                  "example": "Melany"
                },
                "birthday": {
                  "type": "string",
                  "description": "Pet's birthday",
                  "example": "21-09-2023"
                },
                "type": {
                  "type": "string",
                  "description": "Pet's type",
                  "example": "Promeranian"
                },
                "sex": {
                  "type": "string",
                  "description": "Pet's sex",
                  "enum": ["male", "female"],
                  "example": "male"
                },
                "comments": {
                  "type": "string",
                  "description": "Notice's comments",
                  "example": "Rich would be the perfect addition to an active family that loves to play."
                },
                "location": {
                  "type": "string",
                  "description": "Pet's location",
                  "example": "Barnstable Town"
                },
                "category": {
                  "type": "string",
                  "description": "Notice's category",
                  "enum": ["sell", "lost/found", "in good hands"],
                  "example": "lost/found"
                },
                "price": {
                  "type": "number",
                  "description": "Pet's price",
                  "example": "23"
                },
                "owner": {
                  "type": "string",
                  "description": "Owner's id",
                  "example": "534d677fcc8ea74aedaabdc1"
                },
                "idUsersAddedFavorite": {
                  "type": "array",
                  "description": "User's id who added notice favorite",
                  "item": {
                    "type": "string",
                    "describe": "User's id",
                    "example": "64df88ca1f2426eddf5014d7"
                  }
                }
              }
            }
          },
          "totalPages": {
            "type": "number",
            "description": "The number of total pages",
            "example": 1
          }
        },
        "example": {
          "notices": [
            {
              "title": "Cute pet looking for a home",
              "petAvatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg",
              "name": "Charlie",
              "birthday": "21-09-2023",
              "type": "Promeranian",
              "sex": "male",
              "place": "Little Rock",
              "comments": "Rich would be the perfect addition to an active family that loves to play.",
              "category": "sell",
              "price": "40",
              "owner": "f24cf26ff2b7a80e999b8abb",
              "idUsersAddedFavorite": [
                "64df88ca1f2426eddf5014d7",
                "75df88ca1f6346eddf5014g6"
              ]
            },
            {
              "title": "Cute pet looking for a home",
              "petAvatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg",
              "name": "Charlie",
              "birthday": "21-09-2023",
              "type": "Promeranian",
              "sex": "male",
              "place": "Little Rock",
              "comments": "Rich would be the perfect addition to an active family that loves to play.",
              "category": "sell",
              "price": "40",
              "owner": "f24cf26ff2b7a80e999b8abb",
              "idUsersAddedFavorite": [
                "64df88ca1f2426eddf5014d7",
                "75df88ca1f6346eddf5014g6"
              ]
            }
          ],
          "totalPages": 3
        }
      },
      "GetNoticeByIdResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Cute cat looking for a home"
          },
          "petAvatarURL": {
            "type": "string",
            "description": "Pet's foto link",
            "example": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Melany"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "21-09-2023"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "Promeranian"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex",
            "enum": ["male", "female"],
            "example": "male"
          },
          "comments": {
            "type": "string",
            "description": "Notice's comments",
            "example": "Rich would be the perfect addition to an active family that loves to play."
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Barnstable Town"
          },
          "category": {
            "type": "string",
            "description": "Notice's category",
            "enum": ["sell", "lost/found", "in good hands"],
            "example": "lost/found"
          },
          "price": {
            "type": "number",
            "description": "Pet's price",
            "example": "23"
          },
          "owner": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Owner's id",
                "example": "534d677fcc8ea74aedaabdc1"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "phone": {
                "type": "string",
                "description": "User's phone number",
                "example": "+38097485495"
              }
            }
          },
          "idUsersAddedFavorite": {
            "type": "array",
            "description": "User's id who added notice favorite",
            "item": {
              "type": "string",
              "describe": "User's id",
              "example": "64df88ca1f2426eddf5014d7"
            }
          }
        },
        "example": {
          "title": "Cute pet looking for a home",
          "petAvatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg",
          "name": "Charlie",
          "birthday": "21-09-2023",
          "type": "Promeranian",
          "sex": "male",
          "place": "Little Rock",
          "comments": "Rich would be the perfect addition to an active family that loves to play.",
          "category": "sell",
          "price": "40",
          "owner": {
            "_id": "64e9e18e017ce1eee7ae4a1",
            "email": "example@gmail.com",
            "phone": "+38097485495"
          },
          "idUsersAddedFavorite": [
            "64df88ca1f2426eddf5014d7",
            "75df88ca1f6346eddf5014g6"
          ]
        }
      },
      "AddNoticeToFavoriteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Successful operation",
            "example": "Notice successfully add to favorite"
          }
        }
      },
      "RemoveNoticeFromFavoriteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Successful operation",
            "example": "Notice successfully remove from favorite"
          }
        }
      },
      "AddNoticeRequest": {
        "type": "object",
        "required": [
          "title",
          "petAvatar",
          "name",
          "birthday",
          "location",
          "type",
          "sex",
          "category"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Cute cat looking for a home"
          },
          "petAvatar": {
            "type": "file",
            "format": "binary",
            "description": "Pet's avatar file",
            "example": "cat.jpg"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Melany"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "21-09-2023"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "Promeranian"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex",
            "enum": ["male", "female"],
            "example": "male"
          },
          "comments": {
            "type": "string",
            "description": "Notice's comments",
            "example": "Rich would be the perfect addition to an active family that loves to play."
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Barnstable Town"
          },
          "category": {
            "type": "string",
            "description": "Notice's category",
            "enum": ["sell", "lost/found", "in good hands"],
            "example": "lost/found"
          },
          "price": {
            "type": "number",
            "description": "Pet's price (required for category 'sell')",
            "example": "23"
          }
        }
      },
      "AddNoticeResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Cute cat looking for a home"
          },
          "petAvatarURL": {
            "type": "string",
            "description": "Pet's foto link",
            "example": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Melany"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "21-09-2023"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "Promeranian"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex",
            "enum": ["male", "female"],
            "example": "male"
          },
          "comments": {
            "type": "string",
            "description": "Notice's comments",
            "example": "Rich would be the perfect addition to an active family that loves to play."
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Barnstable Town"
          },
          "category": {
            "type": "string",
            "description": "Notice's category",
            "enum": ["sell", "lost/found", "in good hands"],
            "example": "lost/found"
          },
          "price": {
            "type": "number",
            "description": "Pet's price",
            "example": "23"
          },
          "owner": {
            "type": "string",
            "description": "Owner's id",
            "example": "534d677fcc8ea74aedaabdc1"
          },
          "idUsersAddedFavorite": {
            "type": "array",
            "description": "User's id who added notice favorite",
            "item": {
              "type": "string",
              "describe": "User's id",
              "example": "64df88ca1f2426eddf5014d7"
            }
          }
        },
        "example": {
          "title": "Cute pet looking for a home",
          "petAvatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg",
          "name": "Charlie",
          "birthday": "21-09-2023",
          "type": "Promeranian",
          "sex": "male",
          "place": "Little Rock",
          "comments": "Rich would be the perfect addition to an active family that loves to play.",
          "category": "sell",
          "price": "40",
          "owner": "f24cf26ff2b7a80e999b8abb",
          "idUsersAddedFavorite": [
            "64df88ca1f2426eddf5014d7",
            "75df88ca1f6346eddf5014g6"
          ]
        }
      },
      "GetUserNoticesResponse": {
        "type": "object",
        "properties": {
          "notices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Notice's title",
                  "example": "Cute cat looking for a home"
                },
                "petAvatarURL": {
                  "type": "string",
                  "description": "Pet's foto link",
                  "example": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg"
                },
                "name": {
                  "type": "string",
                  "description": "Pet's name",
                  "example": "Melany"
                },
                "birthday": {
                  "type": "string",
                  "description": "Pet's birthday",
                  "example": "21-09-2023"
                },
                "type": {
                  "type": "string",
                  "description": "Pet's type",
                  "example": "Promeranian"
                },
                "sex": {
                  "type": "string",
                  "description": "Pet's sex",
                  "enum": ["male", "female"],
                  "example": "male"
                },
                "comments": {
                  "type": "string",
                  "description": "Notice's comments",
                  "example": "Rich would be the perfect addition to an active family that loves to play."
                },
                "location": {
                  "type": "string",
                  "description": "Pet's location",
                  "example": "Barnstable Town"
                },
                "category": {
                  "type": "string",
                  "description": "Notice's category",
                  "enum": ["sell", "lost/found", "in good hands"],
                  "example": "lost/found"
                },
                "price": {
                  "type": "number",
                  "description": "Pet's price",
                  "example": "23"
                },
                "owner": {
                  "type": "string",
                  "description": "Owner's id",
                  "example": "534d677fcc8ea74aedaabdc1"
                },
                "idUsersAddedFavorite": {
                  "type": "array",
                  "description": "User's id who added notice favorite",
                  "item": {
                    "type": "string",
                    "describe": "User's id",
                    "example": "64df88ca1f2426eddf5014d7"
                  }
                }
              }
            }
          },
          "totalPages": {
            "type": "number",
            "description": "The number of total pages",
            "example": 1
          }
        },
        "example": {
          "notices": [
            {
              "title": "Cute pet looking for a home",
              "petAvatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg",
              "name": "Charlie",
              "birthday": "21-09-2023",
              "type": "Promeranian",
              "sex": "male",
              "place": "Little Rock",
              "comments": "Rich would be the perfect addition to an active family that loves to play.",
              "category": "sell",
              "price": "40",
              "owner": "f24cf26ff2b7a80e999b8abb",
              "idUsersAddedFavorite": [
                "64df88ca1f2426eddf5014d7",
                "75df88ca1f6346eddf5014g6"
              ]
            },
            {
              "title": "Cute pet looking for a home",
              "petAvatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg",
              "name": "Charlie",
              "birthday": "21-09-2023",
              "type": "Promeranian",
              "sex": "male",
              "place": "Little Rock",
              "comments": "Rich would be the perfect addition to an active family that loves to play.",
              "category": "sell",
              "price": "40",
              "owner": "f24cf26ff2b7a80e999b8abb",
              "idUsersAddedFavorite": [
                "64df88ca1f2426eddf5014d7",
                "75df88ca1f6346eddf5014g6"
              ]
            }
          ],
          "totalPages": 3
        }
      },
      "RemoveOwnerNoticeResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Successful operation",
            "example": "Notice successfully delete"
          }
        }
      },

      "GetPetWithOwnerResponse": {
        "type": "object",
        "properties": {
          "pets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Pet's id",
                  "example": "64e9e18e017ce71eee7ae4a"
                },
                "petAvatarURL": {
                  "type": "string",
                  "description": "Pet's foto link",
                  "example": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg"
                },
                "name": {
                  "type": "string",
                  "description": "Pet's name",
                  "example": "Melany"
                },
                "birthday": {
                  "type": "string",
                  "description": "Pet's birthday",
                  "example": "21-09-2023"
                },
                "type": {
                  "type": "string",
                  "description": "Pet's type",
                  "example": "Promeranian"
                },
                "comments": {
                  "type": "string",
                  "description": "Notice's comments",
                  "example": "Melany would be the perfect addition to an active family that loves to play."
                }
              }
            }
          },
          "owner": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Owner's id",
                "example": "64e9e18e017ce71eee7ae4a"
              },
              "name": {
                "type": "string",
                "description": "Owner's name",
                "example": "Taras"
              },
              "email": {
                "type": "string",
                "description": "Owner's name",
                "example": "Taras@gmail.com"
              },
              "avatarURL": {
                "type": "string",
                "description": "Owner's avatar link",
                "example": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693061558/avatars/64e9e18e017ce71eee7ae4a1_Avatar.jpg"
              },
              "birthday": {
                "type": "string",
                "description": "Owner's birthday",
                "example": "23-11-2023"
              },
              "phone": {
                "type": "string",
                "description": "Owner's phone",
                "example": "+38099943"
              },
              "location": {
                "type": "string",
                "description": "Owner's location",
                "example": "Ukrane"
              }
            }
          }
        },

        "example": {
          "pets": [
            {
              "_id": "64eb2dbf6d75872a2b0aa31",
              "petAvatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693134271/pets/64e9e18e017ce71eee7ae4a1_b3snIyj2UBfq3OXbQ3EAo_64e9e1de017ce71eee7ae4a5_xTFrBDUE6aqdBkvckjDYa_humster.jpg",
              "name": "Charly",
              "birthday": "23-12-2023",
              "type": "Piket",
              "comments": ""
            },
            {
              "_id": "g5eb2dbf6d75872a5b0aa31",
              "petAvatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693134271/pets/64e9e18e017ce71eee7ae4a1_b3snIyj2UBfq3OXbQ3EAo_64e9e1de017ce71eee7ae4a5_xTFrBDUE6aqdBkvckjDYa_humster.jpg",
              "name": "Penny",
              "birthday": "03-12-2013",
              "type": "Piket",
              "comments": ""
            }
          ],
          "owner": {
            "_id": "64e9e18e017ce71eee7ae41",
            "name": "Taras",
            "email": "Taras@gmail.com",
            "avatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693061558/avatars/64e9e18e017ce71eee7ae4a1_Avatar.jpg",
            "birthday": "23-11-2023",
            "phone": "+38099943",
            "location": "Ukrane"
          }
        }
      },
      "AddPetRequest": {
        "type": "object",
        "required": ["petAvatar", "name", "birthday", "type"],
        "properties": {
          "petAvatar": {
            "type": "file",
            "format": "binary",
            "description": "Pet's avatar file",
            "example": "cat.jpg"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Melany"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "21-09-2023"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "Promeranian"
          },
          "comments": {
            "type": "string",
            "description": "Pet's comments",
            "example": "Melany would be the perfect addition to an active family that loves to play."
          }
        }
      },
      "AddPetResponse": {
        "type": "object",
        "properties": {
          "petAvatarURL": {
            "type": "string",
            "description": "Pet's foto link",
            "example": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693047085/pets/cujdax5sgppc1g9mikdb.jpg"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Melany"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "21-09-2023"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "Promeranian"
          },
          "comments": {
            "type": "string",
            "description": "Notice's comments",
            "example": "Rich would be the perfect addition to an active family that loves to play."
          },
          "owner": {
            "type": "string",
            "description": "Owner's id",
            "example": "534d677fcc8ea74aedaabdc1"
          },
          "_id": {
            "type": "string",
            "description": "Pet's id",
            "example": "64e9e18e017ce71eee7ae4a"
          }
        },
        "example": {
          "petAvatarURL": "https://res.cloudinary.com/dozyx4svd/image/upload/v1693134271/pets/64e9e18e017ce71eee7ae4a1_b3snIyj2UBfq3OXbQ3EAo_64e9e1de017ce71eee7ae4a5_xTFrBDUE6aqdBkvckjDYa_humster.jpg",
          "name": "Charly",
          "birthday": "23-12-2023",
          "type": "Piket",
          "comments": "",
          "owner": "64e9e18e017ce71eee7aea1",
          "_id": "64eb2dbf6d75872a2b0aa11"
        }
      },
      "RemoveOwnerPetResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Successful operation",
            "example": "Pet successfully delete"
          }
        }
      },

      "GetNewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "imgUrl": {
              "type": "string",
              "description": "News image link",
              "example": "https://www.nytimes.com/images/2023/04/16/magazine/16mag-LOR/16mag-LOR-blog480.jpg"
            },
            "title": {
              "type": "string",
              "description": "News title",
              "example": "What I Learned Dogsitting for New York City’s Opulent Elite"
            },
            "text": {
              "type": "string",
              "description": "News text",
              "example": "In a city of yawning class inequality, some side hustles let you glimpse how the other half lives."
            },
            "date": {
              "type": "string",
              "description": "News date",
              "example": "2023-04-11T09:00:18+0000"
            },
            "url": {
              "type": "string",
              "description": "News link",
              "example": "https://www.nytimes.com/2023/04/11/magazine/dogsitting-rich-new-york.html"
            },
            "id": {
              "type": "string",
              "description": "News id",
              "example": "nyt://article/8d29f1fc-d146-509d-8ceb-5a5b17d7886b"
            }
          }
        },
        "example": [
          {
            "imgUrl": "https://www.nytimes.com/images/2023/04/16/magazine/16mag-LOR/16mag-LOR-blog480.jpg",
            "title": "What I Learned Dogsitting for New York City’s Opulent Elite",
            "text": "In a city of yawning class inequality, some side hustles let you glimpse how the other half lives.",
            "date": "2023-04-11T09:00:18+0000",
            "url": "https://www.nytimes.com/2023/04/11/magazine/dogsitting-rich-new-york.html",
            "id": "nyt://article/8d29f1fc-d146-509d-8ceb-5a5b17d7886b"
          },
          {
            "imgUrl": "https://www.nytimes.com/images/2023/04/04/multimedia/00VIRTUAL-VETS-01b-fmzk/00VIRTUAL-VETS-01b-fmzk-blog480.jpg",
            "title": "The Virtual Vet Will See You Meow",
            "text": "Veterinary telemedicine could help more pet owners access much-needed care and put anxious animals at ease, but challenges remain.",
            "date": "2023-04-07T09:00:46+0000",
            "url": "https://www.nytimes.com/2023/04/07/health/vet-pet-health-telemedicine.html",
            "id": "nyt://article/992f2f7f-793c-5553-b722-348625f53a4b"
          }
        ]
      },
      "GetSponsorsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Sponsor's title",
              "example": "Притулок для бездомних тварин 'Сіріус'"
            },
            "url": {
              "type": "string",
              "description": "Sponsor's site link",
              "example": "https://dogcat.com.ua"
            },
            "adressUrl": {
              "type": "string",
              "description": "Sponsor's address link",
              "example": "https://goo.gl/maps/iq8NXEUf31EAQCzc6"
            },
            "imageUrl": {
              "type": "string",
              "description": "Sponsor's image link",
              "example": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_287.png"
            },
            "address": {
              "type": "string",
              "description": "Sponsor's address",
              "example": "Fedorivka, Kyiv Oblast, Ukraine, 07372"
            },
            "workDays": {
              "type": "array",
              "description": "Sponsor's work days",
              "example": [
                { "isOpen": false },
                { "isOpen": false },
                { "isOpen": false },
                { "isOpen": false },
                { "isOpen": false },
                { "isOpen": true, "from": "11:00", "to": "16:00" },
                { "isOpen": true, "from": "11:00", "to": "16:00" }
              ]
            },
            "phone": {
              "type": "string",
              "description": "Sponsor's phone number",
              "example": "+380931934069"
            },
            "email": {
              "type": "string",
              "description": "Sponsor's email",
              "example": "hello@happypaw.ua"
            }
          }
        },
        "example": [
          {
            "title": "Притулок для бездомних тварин 'Сіріус'",
            "url": "https://dogcat.com.ua",
            "addressUrl": "https://goo.gl/maps/iq8NXEUf31EAQCzc6",
            "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_287.png",
            "address": "Fedorivka, Kyiv Oblast, Ukraine, 07372",
            "workDays": [
              { "isOpen": false },
              { "isOpen": false },
              { "isOpen": false },
              { "isOpen": false },
              { "isOpen": false },
              { "isOpen": true, "from": "11:00", "to": "16:00" },
              { "isOpen": true, "from": "11:00", "to": "16:00" }
            ],
            "phone": "+380931934069",
            "email": null
          },
          {
            "title": "Happy Paw",
            "url": "https://happypaw.ua/ua",
            "addressUrl": "https://goo.gl/maps/3RyzTYBvMr9WQWCC6",
            "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_288.png",
            "address": "Київ, вулиця Шота Руставелі, 44 (3-й поверх, офіс 7)",
            "workDays": [
              { "isOpen": true, "from": "09:00", "to": "17:00" },
              { "isOpen": true, "from": "09:00", "to": "17:00" },
              { "isOpen": true, "from": "09:00", "to": "17:00" },
              { "isOpen": true, "from": "09:00", "to": "17:00" },
              { "isOpen": true, "from": "09:00", "to": "17:00" },
              { "isOpen": true, "from": "09:00", "to": "17:00" },
              { "isOpen": true, "from": "09:00", "to": "17:00" }
            ],
            "phone": "+380442900329",
            "email": "hello@happypaw.ua"
          }
        ]
      },

      "ErrorBadRequestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "This text will describe what is wrong with the request body"
          }
        }
      },
      "ErrorConflictEmailResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Email has already in use"
          }
        }
      },
      "ErrorUnauthorizedResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Unauthorized"
          }
        }
      },
      "ErrorServerResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "This text will describe what is wrong with the internal server"
          }
        }
      },
      "ErrorNotFoundResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Not Found"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
